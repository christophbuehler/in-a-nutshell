{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/topic-block/topic-block.component.html","webpack:///./src/app/topic-block/topic-block.component.scss","webpack:///./src/app/topic-block/topic-block.component.ts","webpack:///./src/app/topics.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n    <img src=\\\"assets/logo.png\\\" alt=\\\"Logo in a nutshell\\\">\\r\\n    <span>in a nutshell</span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div fxFlex class=\\\"topics mat-elevation-z4\\\">\\r\\n    <app-topic-block\\r\\n        [topic]=\\\"topic\\\"\\r\\n        *ngFor=\\\"let topic of topics\\\"></app-topic-block>\\r\\n</div>\"","module.exports = \":host {\\n  display: flex;\\n  flex-direction: column;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  bottom: 0; }\\n  :host mat-toolbar {\\n    background: transparent;\\n    font-size: 16px;\\n    letter-spacing: 1.5px;\\n    font-weight: 500; }\\n  :host mat-toolbar img {\\n      display: inline-block;\\n      padding-right: 4px;\\n      width: 30px; }\\n  :host .topics {\\n    overflow: hidden;\\n    background: #fff;\\n    border-radius: 16px 16px 0 0; }\\n\"","import { Topic, topics } from './topics';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  topics: Topic[] = topics;\n}\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule, MatIconModule, MatButtonModule, MatRippleModule } from '@angular/material';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MarkdownModule, MarkdownService, MarkdownComponent } from 'ngx-markdown';\n\nimport { AppComponent } from './app.component';\nimport { TopicBlockComponent } from './topic-block/topic-block.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopicBlockComponent,\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    BrowserModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatRippleModule,\n    MatButtonModule,\n    MarkdownModule.forRoot({}),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div #content [@popState]=\\\"popState\\\" class=\\\"content\\\">\\r\\n    <div matRipple class=\\\"title\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <mat-icon class=\\\"close-btn\\\" (click)=\\\"close($event)\\\">arrow_back</mat-icon>\\r\\n        <span fxFlex>{{topic.title}}</span>\\r\\n    </div>\\r\\n    <div class=\\\"content-stretch\\\">\\r\\n        <markdown [data]=\\\"topic.body || 'Inhalt folgt.'\\\" class=\\\"body\\\"></markdown>\\r\\n        <div *ngIf=\\\"topic.children\\\">\\r\\n            <app-topic-block\\r\\n                [topic]=\\\"topic\\\"\\r\\n                *ngFor=\\\"let topic of topic.children\\\"></app-topic-block>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \":host {\\n  display: block;\\n  overflow: hidden;\\n  height: 52px; }\\n  :host:last-of-type > .content > .title {\\n    border-bottom-color: transparent; }\\n  :host.view > .content {\\n    z-index: 1;\\n    position: absolute; }\\n  :host.view > .content > .title {\\n      border-bottom-color: rgba(0, 0, 0, 0.2) !important;\\n      position: absolute;\\n      left: 0;\\n      top: 0;\\n      background: #fff; }\\n  :host.view > .content > .title span {\\n        padding-left: 8px; }\\n  :host.view > .content > .title .close-btn {\\n        display: block; }\\n  :host > .content {\\n    width: 100%;\\n    height: 52px;\\n    background: #fff;\\n    border-radius: 8px; }\\n  :host > .content .title {\\n      width: 100%;\\n      font-size: 16px;\\n      color: rgba(0, 0, 0, 0.9);\\n      font-weight: 500;\\n      padding: 0 16px;\\n      height: 52px;\\n      position: relative;\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2); }\\n  :host > .content .title span {\\n        line-height: 52px;\\n        height: 52px; }\\n  :host > .content .title .close-btn {\\n        display: none; }\\n  :host > .content .content-stretch {\\n      padding-top: 52px;\\n      height: 100%;\\n      overflow: auto;\\n      box-sizing: border-box; }\\n  :host > .content .content-stretch .body {\\n        display: block;\\n        line-height: 1.5;\\n        font-size: 14px;\\n        padding: 16px;\\n        color: #5f6368; }\\n  :host > .content .content-stretch .body /deep/ img {\\n          max-width: 100%; }\\n  :host > .content .content-stretch .body /deep/ h4 {\\n          border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n          margin: 0;\\n          padding-bottom: 4px; }\\n\"","import { Component, OnInit, Input, HostBinding, HostListener, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MarkdownService } from 'ngx-markdown';\n\nimport { Topic } from '../topics';\nimport { ElementRef } from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'app-topic-block',\n  templateUrl: './topic-block.component.html',\n  animations: [\n    trigger('popState', [\n      state('true', style({\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        height: '100%',\n      })),\n      transition('false => true', [\n        style({\n          position: 'absolute',\n        }),\n        animate('0.4s ease')\n      ]),\n    ])\n  ],\n  styleUrls: ['./topic-block.component.scss']\n})\nexport class TopicBlockComponent implements OnInit {\n  @Input() topic: Topic;\n  @ViewChild('content', { read: ElementRef }) content;\n  @HostListener('click', ['$event']) onClick(e) {\n    if (this.show) return;\n    this.show = true;\n    const contentEl = this.content.nativeElement;\n    const rootEl = this.elRef.nativeElement;\n    contentEl.style.top = `${rootEl.offsetTop}px`;\n    rootEl.classList.toggle('view', true);\n    this.popState = true;\n  }\n  popState = false;\n\n  private show = false;\n\n  constructor(\n    private elRef: ElementRef,\n  ) { }\n\n  close(ev: Event) {\n    ev.stopPropagation();\n    if (!this.show) return;\n    this.show = false;\n    const rootEl = this.elRef.nativeElement;\n    rootEl.classList.toggle('view', false);\n    this.popState = false;\n  }\n\n  ngOnInit() {\n  }\n}\n","export const topics = <Topic[]>[\r\n    {\r\n        title: 'Biologie',\r\n        children: [\r\n            {\r\n                title: 'Eigenschaften von Lebewesen',\r\n                body: `\r\n                - Lebewesen können Informationen (Reize) aus ihrer Umwelt aufnehmen und auf diese reagieren (Reizbarkeit).\r\n                - Lebewesen sind in der Lage, sich fortzupflanzen und sich zu vermehren (Fortpflanzung und Vermehrung).\r\n                - Lebewesen besitzen zum Aufb  au und Aufrechterhaltung ihres Körpers und seiner Funktionen einen (eigenen!) Stoffwechsel.\r\n                - Lebewesen wachsen und entwickeln sich (Wachstum und Entwicklung).\r\n                - Lebewesen können sich selbst bewegen oder zeigen zumindest innerhalb ihres Körpers (bzw. innerhalb ihrer Zellen) Bewegungen (Bewegung, Beweglichkeit bzw. Motilität).\r\n                `,\r\n            },\r\n            {\r\n                title: 'Zellen',\r\n                body: `\r\n                `,\r\n                children: [\r\n                    {\r\n                        title: 'Protocyte',\r\n                        body: `\r\n                        - Zelle ohne Zellkern aber mit einer Kernregion.\r\n                        - Lebewesen mit Protocyten werden Prokaryoten genannt (z.B. Bakterien).\r\n                        - Besitzt kein ER, keinen Golgi-Apparat, keine Mitochondrien und keine Chloroplasten.\r\n                        ![bakterienzelle.png](assets/bakterienzelle.png)\r\n                        `,\r\n                    },\r\n                    {\r\n                        title: 'Pflanzenzelle',\r\n                        body: `\r\n                        - Zelle mit Zellkern (Eucyte).\r\n                        - Hat eine stützende und schützende Zellwand.\r\n                        - Besitzt Chloroplasten und Mitochondrien.\r\n                        - Pflanzen sind autotroph (=selbsternährend).\r\n                        - Pflanzen können sich nicht fortbewegen.\r\n                        ![pflanzenzelle.png](assets/pflanzenzelle.png)\r\n                        `,\r\n                    },\r\n                    {\r\n                        title: 'Tierische Zelle',\r\n                        body: `\r\n                        - Zelle mit Zellkern (Eucyte).\r\n                        - Besitzt keine Zellwand. Körper wird daher vom Skelett und Muskeln gehalten.\r\n                        - Besitzt Mitochondrien, dafür keine Chloroplasten\r\n                        - Tiere sind heterotroph (=sich von anderen ernährend).\r\n                        - Tiere müssen sich bewegen um Nahrung zu finden\r\n                        ![tierische-zelle.png](assets/tierische-zelle.png)\r\n                        `,\r\n                    },\r\n                    {\r\n                        title: 'Bausteine der Zellen',\r\n                        body: `\r\n                        #### Zellwand\r\n                        - Nur bei Pflanzenzellen.\r\n                        - Schützt und stützt.\r\n\r\n                        #### Cytoplasma\r\n                        - Gesamter Bereich, der den Zellkern umgibt.\r\n                        - Besteht mehrheitlich aus Wasser und vielen Proteinen.\r\n                        - Somit ist das Cytoplasma dickflüssig bis gelartig.\r\n\r\n                        #### Zellmembran\r\n                        - Regelt den Stoffaustausch zwischen den Zellen und ihrer Umgebung.\r\n                        - Grenzt Cytoplasma ab.\r\n                        - Ermöglicht Kommunikation zwischen den Zellen und ihrer Umgebung.\r\n                        - Besteht aus einer Lipid-Doppelschicht.\r\n                        ![zellmembran.png](assets/zellmembran.png)\r\n\r\n                        #### Zellkern\r\n                        - Träger des Erbgutes.\r\n                        - Bewahrt Informationen für den Bau und Betrieb der Zelle.\r\n                        - Steuert mit dieser Information die Entwicklung und Aktivität der Zelle.\r\n                        - Verdoppelt das Erbgut vor der Zellteilung.\r\n                        ...\r\n                        `,\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Chemie',\r\n    },\r\n    {\r\n        title: 'Umwelt',\r\n    }\r\n];\r\n\r\nexport interface Topic {\r\n    title: string;\r\n    abstract?: string;\r\n    body?: string;\r\n    children?: Topic[];\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}